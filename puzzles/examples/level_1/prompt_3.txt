Below is a puzzle involving 20 input buffers and their transformed outputs.
Each buffer is exactly 64 bytes, shown in hex.

Your task: Figure out the logic of the transformation used to go from the INPUT to the OUTPUT.
Then, provide a Python function that, given any new 64-byte buffer, will produce the correct transformed output.

def transform(data: bytes) -> bytes:
   # Transform logic
   return bytes

Here are the 20 input (SRC) buffers in hex (one line per buffer):
INPUT #01: 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
INPUT #02: ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
INPUT #03: 01000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
INPUT #04: 02000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
INPUT #05: 80000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
INPUT #06: aa000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
INPUT #07: 00ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
INPUT #08: f0ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
INPUT #09: 0fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
INPUT #10: 55ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
INPUT #11: 000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f
INPUT #12: fffefdfcfbfaf9f8f7f6f5f4f3f2f1f0efeeedecebeae9e8e7e6e5e4e3e2e1e0dfdedddcdbdad9d8d7d6d5d4d3d2d1d0cfcecdcccbcac9c8c7c6c5c4c3c2c1c0
INPUT #13: aa55aa55aa55aa55aa55aa55aa55aa55aa55aa55aa55aa55aa55aa55aa55aa55aa55aa55aa55aa55aa55aa55aa55aa55aa55aa55aa55aa55aa55aa55aa55aa55
INPUT #14: 55aa55aa55aa55aa55aa55aa55aa55aa55aa55aa55aa55aa55aa55aa55aa55aa55aa55aa55aa55aa55aa55aa55aa55aa55aa55aa55aa55aa55aa55aa55aa55aa
INPUT #15: f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0
INPUT #16: 0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f
INPUT #17: 01010101010101010202020202020202040404040404040408080808080808081010101010101010202020202020202040404040404040408080808080808080
INPUT #18: 48656c6c6f2c20576f726c64212048656c6c6f2c20576f726c64212048656c6c6f2c20576f726c64212048656c6c6f2c20576f726c64212048656c6c6f2c2057
INPUT #19: 0101020305080d1522375990e97962db3d18556dc22ff12011314273b528dd05e2e7c9b07929a2cb6d38a5dd825fe140216182e36548adf5a29739d009d9e2bb
INPUT #20: 789b34caf54f2e220acd941e71b88d5836866d0d858b63549e94be2cacc67f5b7ef28f2d9903959f63d3d893dce752779c84162917ec8ff1af4a6422d367e18d

And here are the corresponding transformed outputs (DST) in hex:
OUTPUT #01: bebebebebebebebebebebebebebebebebebebebebebebebebebebebebebebebebebebebebebebebebebebebebebebebebebebebebebebebebebebebebebebebe
OUTPUT #02: 41414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141
OUTPUT #03: bfbebebebebebebebebebebebebebebebebebebebebebebebebebebebebebebebebebebebebebebebebebebebebebebebebebebebebebebebebebebebebebebe
OUTPUT #04: bcbebebebebebebebebebebebebebebebebebebebebebebebebebebebebebebebebebebebebebebebebebebebebebebebebebebebebebebebebebebebebebebe
OUTPUT #05: 3ebebebebebebebebebebebebebebebebebebebebebebebebebebebebebebebebebebebebebebebebebebebebebebebebebebebebebebebebebebebebebebebe
OUTPUT #06: 14bebebebebebebebebebebebebebebebebebebebebebebebebebebebebebebebebebebebebebebebebebebebebebebebebebebebebebebebebebebebebebebe
OUTPUT #07: be414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141
OUTPUT #08: 4e414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141
OUTPUT #09: b1414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141
OUTPUT #10: eb414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141
OUTPUT #11: bebfbcbdbabbb8b9b6b7b4b5b2b3b0b1aeafacadaaaba8a9a6a7a4a5a2a3a0a19e9f9c9d9a9b989996979495929390918e8f8c8d8a8b88898687848582838081
OUTPUT #12: 414043424544474649484b4a4d4c4f4e515053525554575659585b5a5d5c5f5e616063626564676669686b6a6d6c6f6e717073727574777679787b7a7d7c7f7e
OUTPUT #13: 14eb14eb14eb14eb14eb14eb14eb14eb14eb14eb14eb14eb14eb14eb14eb14eb14eb14eb14eb14eb14eb14eb14eb14eb14eb14eb14eb14eb14eb14eb14eb14eb
OUTPUT #14: eb14eb14eb14eb14eb14eb14eb14eb14eb14eb14eb14eb14eb14eb14eb14eb14eb14eb14eb14eb14eb14eb14eb14eb14eb14eb14eb14eb14eb14eb14eb14eb14
OUTPUT #15: 4e4e4e4e4e4e4e4e4e4e4e4e4e4e4e4e4e4e4e4e4e4e4e4e4e4e4e4e4e4e4e4e4e4e4e4e4e4e4e4e4e4e4e4e4e4e4e4e4e4e4e4e4e4e4e4e4e4e4e4e4e4e4e4e
OUTPUT #16: b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1
OUTPUT #17: bfbfbfbfbfbfbfbfbcbcbcbcbcbcbcbcbabababababababab6b6b6b6b6b6b6b6aeaeaeaeaeaeaeae9e9e9e9e9e9e9e9efefefefefefefefe3e3e3e3e3e3e3e3e
OUTPUT #18: f6dbd2d2d1929ee9d1ccd2da9f9ef6dbd2d2d1929ee9d1ccd2da9f9ef6dbd2d2d1929ee9d1ccd2da9f9ef6dbd2d2d1929ee9d1ccd2da9f9ef6dbd2d2d1929ee9
OUTPUT #19: bfbfbcbdbbb6b3ab9c89e72e57c7dc6583a6ebd37c914f9eaf8ffccd0b9663bb5c59770ec7971c75d3861b633ce15ffe9fdf3c5ddbf6134b1c29876eb7675c05
OUTPUT #20: c6258a744bf1909cb4732aa0cf0633e68838d3b33b35ddea202a00921278c1e5c04c319327bd2b21dd6d662d6259ecc9223aa897a952314f11f4da9c6dd95f33

Good luck! Remember, the transformation is the same for all 20 buffers.